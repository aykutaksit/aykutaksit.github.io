name: Weekly refresh pubs.bib
on:
  schedule:
    - cron:  '0 4 * * 0'      # Sun 04 UTC
  workflow_dispatch:
permissions:
  contents: write             # allow push

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: '3.x'}

      - name: Pull Scholar via SerpAPI â†’ pubs.bib
        env:
          SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}
        run: |
          python - <<'PY'
          import requests, pathlib, datetime, textwrap, sys, os, json

          AUTHOR_ID = "thCuEKEAAAAJ"       # Aykut
          OUTFILE   = pathlib.Path("pubs.bib")
          KEY       = os.environ["SERPAPI_KEY"]

          url = "https://serpapi.com/search.json"
          params = {
              "engine": "google_scholar_author",
              "author_id": AUTHOR_ID,
              "api_key": KEY,
              "num": "100"      # max per page
          }
          r = requests.get(url, params=params, timeout=30)
          r.raise_for_status()
          pubs = r.json().get("articles", [])

          if not pubs:
              sys.exit("No publications returned; exiting.")

          bibs = []
          for p in pubs:
              if "citation_id" not in p:
                  continue
              # second call gets full BibTeX
              br = requests.get(url, params={
                  "engine": "google_scholar_cite",
                  "q": p["citation_id"],
                  "api_key": KEY,
                  "format": "bibtex"
              }, timeout=30)
              if br.ok:
                  bibs.append(br.text.strip())

          if not bibs:
              sys.exit("Empty bib list; exiting.")

          new_text = textwrap.dedent(f"""\
              % auto-generated {datetime.date.today()}
              
              {'\\n\\n'.join(bibs)}
              """).rstrip() + "\n"

          if OUTFILE.exists() and OUTFILE.read_text() == new_text:
              print("pubs.bib already current; nothing to commit."); sys.exit(0)

          OUTFILE.write_text(new_text, encoding="utf-8")
          print(f"Wrote pubs.bib with {len(bibs)} entries")
          PY

      - name: Commit if changed
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add pubs.bib
          git diff --cached --quiet || git commit -m "auto: update pubs.bib"
          git push
