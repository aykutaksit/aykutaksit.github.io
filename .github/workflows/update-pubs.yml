name: Weekly refresh pubs.bib

on:
  schedule:
    - cron: '0 4 * * 0'        # Sun 04 UTC  (≈ Sat midnight ET)
  workflow_dispatch:           # manual trigger

permissions:
  contents: write      # allows github-actions[bot] to commit & push

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Regenerate pubs.bib
        run: |
          pip install scholarly==1.7.11

          python - <<'PY'
          from scholarly import scholarly, ProxyGenerator
          import pathlib, datetime, sys, traceback, textwrap

          USER_ID  = "thCuEKEAAAAJ"     # Aykut Aksit
          OUTFILE  = pathlib.Path("pubs.bib")
          TODAY    = datetime.date.today()

          def fetch(with_proxy: bool):
              try:
                  if with_proxy:
                      pg = ProxyGenerator()
                      try:
                          ok = pg.FreeProxies()
                      except Exception:
                          ok = False
                      if not ok:
                          raise RuntimeError("no proxy available")
                      scholarly.use_proxy(pg)

                  author = scholarly.fill(
                      scholarly.search_author_id(USER_ID),
                      sections=["publications"]
                  )
                  return [scholarly.bibtex(p) for p in author["publications"]]
              except Exception as e:
                  reason = "proxy" if with_proxy else "direct"
                  print(f"⚠️  {reason} fetch failed:", e)
                  print(traceback.format_exc())
                  return None

          bibs = fetch(True) or fetch(False)
          if not bibs:
              print("❌  Could not retrieve publications; keeping current pubs.bib.")
              sys.exit(0)   # exit 0 so the Action stays green

          new_text = textwrap.dedent(f"""\
              % auto-generated {TODAY}

              {'\\n\\n'.join(bibs)}
              """).rstrip() + "\n"

          if OUTFILE.exists() and OUTFILE.read_text() == new_text:
              print("ℹ️  pubs.bib already up to date.")
              sys.exit(0)

          OUTFILE.write_text(new_text, encoding="utf-8")
          print(f"✅  Wrote pubs.bib with {len(bibs)} entries")
          PY

      - name: Commit if pubs.bib changed
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add pubs.bib
          git diff --cached --quiet || git commit -m "auto: update pubs.bib"
          git push
