name: Weekly refresh pubs.bib

on:
  schedule:
    - cron: '0 4 * * 0'      # Sun 04 UTC
  workflow_dispatch:

permissions:
  contents: write            # allow push back to repo

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.x' }

      - name: Pull Scholar via SerpAPI → pubs.bib
        env:
          SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}
        run: |
          pip install scholarly==1.7.11
          pip install requests             # ← NEW line

          python - <<'PY'
          import requests, pathlib, datetime, textwrap, sys, os

          AUTHOR_ID = "thCuEKEAAAAJ"
          KEY       = os.environ["SERPAPI_KEY"]
          OUTFILE   = pathlib.Path("pubs.bib")

          def cite_to_bib(cite_id):
              r = requests.get(
                  "https://serpapi.com/search.json",
                  params={
                      "engine": "google_scholar_cite",
                      "q": cite_id,
                      "format": "bibtex",
                      "api_key": KEY
                  },
                  timeout=30
              )
              r.raise_for_status()
              return r.text.strip()

          r = requests.get(
              "https://serpapi.com/search.json",
              params={
                  "engine": "google_scholar_author",
                  "author_id": AUTHOR_ID,
                  "num": "100",
                  "api_key": KEY
              },
              timeout=30
          )
          r.raise_for_status()
          articles = r.json().get("articles", [])

          bibs = []
          for a in articles:
              cid = a.get("citation_id")
              if cid:
                  bibs.append(cite_to_bib(cid))

          if not bibs:
              sys.exit("No BibTeX entries fetched; exiting.")

          new_text = textwrap.dedent(f"""\
              % auto-generated {datetime.date.today()}

              {'\\n\\n'.join(bibs)}
              """).rstrip() + "\n"

          if OUTFILE.exists() and OUTFILE.read_text() == new_text:
              print("pubs.bib already up to date."); sys.exit(0)

          OUTFILE.write_text(new_text, encoding="utf-8")
          print(f"Wrote pubs.bib with {len(bibs)} entries")
          PY

      - name: Commit if changed
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add pubs.bib
          git diff --cached --quiet || git commit -m "auto: update pubs.bib"
          git push
